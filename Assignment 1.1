{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14aded93",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1. In the below elements which of them are values or an expression? eg:- values can be\n",
    "#integer or string and expressions will be mathematical operators.\n",
    "\n",
    "#1> *== multiplication operator.\n",
    "#2>'hello'== srtring.\n",
    "#3>-87.8 == float.\n",
    "#4>-   == substraction operator.\n",
    "#5> / == divide operator.\n",
    "#6>  +== addition operator.\n",
    "#7> 6==integer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1516c693",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2. What is the difference between string and variable?\n",
    "\n",
    "#string>string is a collection of characters.\n",
    "#variable> variable is a alocation of memory to store a data type.\n",
    "#string> is represented in \"\".\n",
    "#variable> there are specific rules to name a variable.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f68df25",
   "metadata": {},
   "outputs": [],
   "source": [
    "#3. Describe three different data types.\n",
    "\n",
    "#String> collection of charascters inside a inverted comma(\"\"). any character representwed inside the \"\" is a string.\n",
    "\n",
    "#float> any number which has a decimal piont is considdered as a float.\n",
    "\n",
    "#int> any number is called as integers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d44d4bd4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#4. What is an expression made up of? What do all expressions do?\n",
    "#Ans> anything which represents a value is called as expression. expressions carry out evaluation phenomenon.\n",
    "#example:> 2=2 is an expression.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a42411ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "#5. This assignment statements, like spam = 10. What is the difference between an\n",
    "#expression and a statement?\n",
    "#Ans:>Expression:>Expression always returns a value.\n",
    "#Statement:>it never returns a value.\n",
    "#Expression:>function also act as an expression,even a non returning function will still return none value.\n",
    "#Statement:>cannot print any result.\n",
    "#Expression:> can print the result value.\n",
    "#Expression Example:>assignment statement,conditional branching,loops,classes import,def,etc.,\n",
    "#Statement Example:>”hello”+”world” , 2+3..etc,."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84266610",
   "metadata": {},
   "outputs": [],
   "source": [
    "#6. After running the following code, what does the variable bacon contain?\n",
    "#bacon = 22\n",
    "#bacon + 1\n",
    "#Ans:> the value of bacon will be 22.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eeeacdb6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#7. What should the values of the following two terms be?\n",
    "#&#39;spam&#39; + &#39;spamspam&#39;\n",
    "#&#39;spam&#39; * 3\n",
    "#Ans:> invalid syntax\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cbfd575c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#8. Why is eggs a valid variable name while 100 is invalid?\n",
    "#Ans:>eggs is valid variable name because as per the rules the variable name can start with any small letters.100 is not valid because the variable name cannot start with the numerical values.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9ffd7a20",
   "metadata": {},
   "outputs": [],
   "source": [
    "#9. What three functions can be used to get the integer, floating-point number, or string\n",
    "#version of a value?\n",
    "#Ans:> for integers: int() , for string: str() , for floating point number:float().\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e3c99d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#10. Why does this expression cause an error? How can you fix it?\n",
    "#&#39;I have eaten &#39; + 99 + &#39; burritos.&#39;\n",
    "#Ans:> because it is not under the inverted commas. “&#39;I have eaten &#39;” + “99 “+ “&#39; burritos.&#39;” this expression is executable.by taking it under the inverted comma we converted the value into a string  and then concatenated it. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
